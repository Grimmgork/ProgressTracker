<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ProgressTracker"
    xmlns:Controls="clr-namespace:ProgressTracker.Controls"
    xmlns:sys="clr-namespace:System;assembly=System.Runtime">

    <SolidColorBrush x:Key="PrimaryColor" Color="#FF0034FF"/>

    <SolidColorBrush x:Key="ErrorColor" Color="#FFFF162A"/>
    <SolidColorBrush x:Key="SuccessColor" Color="#03fc52"/>
    <SolidColorBrush x:Key="WarningColor" Color="#FFF84221"/>

    <SolidColorBrush x:Key="ErrorColorDark" Color="#FFB70C1B"/>

    <SolidColorBrush x:Key="BackgroundColor" Color="#191919"/>
    <SolidColorBrush x:Key="MiddlegroundColor" Color="#202020"/>
    <SolidColorBrush x:Key="ForegroundColor" Color="#222222"/>

    <SolidColorBrush x:Key="HighlightColor" Color="#303030"/>

    <SolidColorBrush x:Key="TextNormalColor" Color="#A4A4A4"/>
    <SolidColorBrush x:Key="TextDarkColor" Color="#FF565656"/>
    <SolidColorBrush x:Key="TextLightColor" Color="WhiteSmoke"/>

    <SolidColorBrush x:Key="ScrollbarColor" Color="#21252b"/>
    <SolidColorBrush x:Key="ScrollbarHighlightColor" Color="#FF2C3138"/>


    <FontFamily x:Key="SymbolFont">
        pack://application:,,,/Fonts/#remixicon Standart
    </FontFamily>

    <FontFamily x:Key="TextFont">
        Segoe UI
    </FontFamily>

    <BooleanToVisibilityConverter x:Key="BoolToVis"></BooleanToVisibilityConverter>

    <Style x:Key="SecondaryButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>

        <Setter Property="FontSize" Value="15" />
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="MinHeight" Value="24"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >

                    <Border x:Name="bd" Background="{StaticResource ForegroundColor}" BorderThickness="1" BorderBrush="{StaticResource HighlightColor}" MinHeight="25" UseLayoutRounding="True">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="10" ShadowDepth="3" Direction="-90" Color="Black" Opacity="0.1" RenderingBias="Performance"/>
                        </Border.Effect>

                        <TextBlock x:Name="MyContentPresenter" Foreground="{StaticResource TextLightColor}" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Regular" FontSize="14" SnapsToDevicePixels="False" UseLayoutRounding="False"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="BorderBrush" Value="{StaticResource PrimaryColor}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{StaticResource PrimaryColor}"  />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="bd" Property="Background" Value="{StaticResource HighlightColor}"/>
                            <Setter TargetName="bd" Property="BorderBrush" Value="{StaticResource HighlightColor}"/>
                            <Setter TargetName="MyContentPresenter" Property="Foreground" Value="{StaticResource ForegroundColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TransparentButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource TextLightColor}" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="MinHeight" Value="24"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="Bd" Background="Transparent">
                        <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="False" SnapsToDevicePixels="False"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource HighlightColor}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource PrimaryColor}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="{StaticResource HighlightColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrimaryButtonStyle" BasedOn="{StaticResource TransparentButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border Background="{StaticResource PrimaryColor}">
                        <Grid>
                            <Border x:Name="lig" Background="White" Opacity="0.05" Visibility="Hidden"/>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="False" UseLayoutRounding="False"/>
                            <Border x:Name="dim" Background="Black" Opacity="0.2" Visibility="Hidden"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="lig" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="dim" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="lig" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource SecondaryButtonStyle}">

    </Style>

    <Style TargetType="{x:Type Controls:NumericInput}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="MinWidth" Value="32"/>
        <Setter Property="MaxHeight" Value="24"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:NumericInput}">
                    <Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="16"/>
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <TextBox x:Name ="MainTextBox" Grid.RowSpan="2" Text="{Binding Value}"/>

                            <Button x:Name="IncrementButton" Grid.Column="1" Style="{StaticResource TransparentButtonStyle}" MinHeight="0" FontSize="12" FontFamily="{StaticResource SymbolFont}" Content="&#xea75;" IsTabStop="False"/>
                            <Button x:Name="DecrementButton" Grid.Column="1" Grid.Row="1" Style="{StaticResource TransparentButtonStyle}" MinHeight="0" FontSize="12" FontFamily="{StaticResource SymbolFont}" Content="&#xea4b;" IsTabStop="False"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="GroupBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Border Grid.Row="0" Grid.RowSpan="2" BorderThickness="0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Label Foreground="{StaticResource TextDarkColor}" Background="{StaticResource ForegroundColor}" FontSize="13">
                                <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" HorizontalAlignment="Stretch"/>
                            </Label>

                            <Label Background="{StaticResource ForegroundColor}" Grid.Row="1"/>
                            <ContentPresenter Grid.Row="1" Margin="10"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FlatListBoxItemBase" TargetType="{x:Type ListBoxItem}">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">

                        <Border x:Name="Bd" Background="{TemplateBinding Background}">
                            <ContentPresenter Grid.Column="1"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource HighlightColor}" />
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="Bd" Property="Background" Value="Transparent" />
                            </Trigger>

                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource PrimaryColor}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style TargetType="{x:Type ListBox}">

        <Setter Property="Foreground" Value="{StaticResource TextNormalColor}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource FlatListBoxItemBase}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <ScrollViewer Background="{Binding Background}">
                        <VirtualizingStackPanel IsItemsHost="True"/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="0" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Label Grid.Row="1" Background="{StaticResource PrimaryColor}"/>
                        <TabPanel IsItemsHost="True"/>
                        <Border Grid.Row="2" BorderThickness="0" BorderBrush="{StaticResource HighlightColor}">
                            <ContentPresenter ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid Width="110">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="3" />
                        </Grid.RowDefinitions>

                        <Label/>
                        <Label x:Name="Back" Grid.Row="1"/>
                        <ContentPresenter x:Name="CP" ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Back" Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="{StaticResource TextDarkColor}" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource TextNormalColor}" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Back" Property="Background" Value="{StaticResource PrimaryColor}" />
                            <Setter Property="Foreground" Value="{StaticResource TextLightColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>


    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{StaticResource SuccessColor}"/>
        <Setter Property="Background" Value="{StaticResource MiddlegroundColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="Root">
                        <Border Name="PART_Track" Background="{TemplateBinding Background}"/>
                        <Border Name="PART_Indicator" Background="{TemplateBinding Foreground}" HorizontalAlignment="Left" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        
    </Style>
    

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Border x:Name="B_main" BorderBrush="{StaticResource HighlightColor}" BorderThickness="1" Background="{StaticResource ForegroundColor}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="15" />
                </Grid.ColumnDefinitions>

                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M 0 0 L 4 4 L 8 0 Z"
                  />
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="B_main" Property="BorderBrush" Value="{StaticResource PrimaryColor}" />
            </Trigger>

            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="B_main" Property="Background" Value="{StaticResource BackgroundColor}" />
                <Setter TargetName="B_main" Property="BorderBrush" Value="{StaticResource PrimaryColor}" />
                <Setter TargetName="Arrow" Property="Visibility" Value="Hidden" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}"/>
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="{StaticResource TextLightColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>

                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="5,3,5,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />

                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="5,3,5,3"
                            Focusable="True" 
                            Background="#FF3F3F3F"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>

                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" UseLayoutRounding="True" SnapsToDevicePixels="True" Focusable="False" PopupAnimation="Fade">
                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                                Background="{StaticResource BackgroundColor}"
                                BorderThickness="1"
                                BorderBrush="{StaticResource PrimaryColor}">
                                    <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>

                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="False"/>
        <Setter Property="UseLayoutRounding" Value="False"/>
        <Setter Property="Foreground" Value="{StaticResource TextLightColor}"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border" SnapsToDevicePixels="true">
                        <ContentPresenter Margin="3"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PrimaryColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="Foreground" Value="{StaticResource TextLightColor}"/>
        <Setter Property="CaretBrush" Value="{StaticResource TextLightColor}"/>

        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="AcceptsReturn" Value="False"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>

        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="Border" BorderThickness="1" BorderBrush="{StaticResource HighlightColor}" Background="{StaticResource ForegroundColor}">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                        </Trigger>

                        <Trigger Property="IsSelectionActive" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TransparentTextbox" TargetType="{x:Type TextBox}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="Foreground" Value="{StaticResource TextLightColor}"/>
        <Setter Property="CaretBrush" Value="{StaticResource TextLightColor}"/>

        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="AcceptsReturn" Value="False"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>

        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="Border" BorderThickness="1" BorderBrush="{StaticResource HighlightColor}" Background="{StaticResource ForegroundColor}">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                        </Trigger>

                        <Trigger Property="IsSelectionActive" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="MultilineTextBox">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="Foreground" Value="{StaticResource TextLightColor}"/>
        <Setter Property="CaretBrush" Value="{StaticResource TextLightColor}"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="TextWrapping" Value="Wrap"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="Border" BorderThickness="1" BorderBrush="{StaticResource HighlightColor}" Background="{StaticResource ForegroundColor}">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                        </Trigger>

                        <Trigger Property="IsSelectionActive" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="Border" Background="{StaticResource ForegroundColor}">
                        <TextBlock x:Name="Symbol" FontSize="18" Foreground="{StaticResource HighlightColor}" FontFamily="{StaticResource SymbolFont}" Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ScrollbarColor}" />
                            <Setter TargetName="Symbol" Property="Foreground" Value="{StaticResource ScrollbarHighlightColor}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Symbol" Property="Foreground" Value="{StaticResource ScrollbarColor}" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ForegroundColor}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="Back" Background="{StaticResource ScrollbarColor}"/>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Back" Property="Background" Value="{StaticResource ScrollbarHighlightColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="16" />
                <RowDefinition Height="1"/>
                <RowDefinition Height="0.00001*" />
                <RowDefinition Height="1"/>
                <RowDefinition MaxHeight="16" />
            </Grid.RowDefinitions>

            <Border Grid.RowSpan="5" Background="Yellow"/>

            <RepeatButton Style="{StaticResource ScrollBarLineButton}" Command="ScrollBar.LineUpCommand" Content="&#xea75;" />
            <Rectangle Grid.Row="1" Fill="{StaticResource HighlightColor}"/>

            <Track x:Name="PART_Track" Grid.Row="2" IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>

                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Background="Gray"/>
                </Track.Thumb>

                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>

            <Rectangle Grid.Row="3" Fill="{StaticResource HighlightColor}"/>
            <RepeatButton Grid.Row="4" Style="{StaticResource ScrollBarLineButton}" Command="ScrollBar.LineDownCommand" Content="&#xea4b;" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="16" />
                <ColumnDefinition Width="1"/>
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition Width="1"/>
                <ColumnDefinition MaxWidth="16" />
            </Grid.ColumnDefinitions>

            <Border Grid.ColumnSpan="5" Background="Yellow"/>

            <RepeatButton Style="{StaticResource ScrollBarLineButton}" Command="ScrollBar.LineLeftCommand" Content="&#xea61;" />
            <Rectangle Grid.Column="1" Fill="{StaticResource HighlightColor}"/>

            <Track x:Name="PART_Track" Grid.Column="2" IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Background="Gray"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>

            <Rectangle Grid.Column="3" Fill="{StaticResource HighlightColor}"/>
            <RepeatButton Grid.Column="4" Style="{StaticResource ScrollBarLineButton}" Command="ScrollBar.LineRightCommand" Content="&#xea6b;" />
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />

        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="16" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>

            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="16" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type ScrollViewer}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template" Value="{DynamicResource ScrollViewerControlTemplate}"/>
    </Style>

    <ControlTemplate x:Key="ScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
        </Grid>
    </ControlTemplate>
</ResourceDictionary>
